--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do
	local v0 = string.char;
	local v1 = string.byte;
	local v2 = string.sub;
	local v3 = bit32 or bit;
	local v4 = v3.bxor;
	local v5 = table.concat;
	local v6 = table.insert;
	local function v7(v24, v25)
		local v26 = 0;
		local v27;
		while true do
			if (v26 == 1) then
				return v5(v27);
			end
			if (v26 == 0) then
				v27 = {};
				for v44 = 1, #v24 do
					v6(v27, v0(v4(v1(v2(v24, v44, v44 + 1)), v1(v2(v25, 1 + ((v44 - 1) % #v25), 1 + ((v44 - 1) % #v25) + 1))) % 256));
				end
				v26 = 1;
			end
		end
	end
	local v8 = _G[v7("\108\49\225\175\232\122\59\253", "\24\94\143\218\133")];
	local v9 = _G[v7("\221\17\27\120\192\2", "\174\101\105\17")][v7("\177\212\109\69", "\211\173\25\32\118")];
	local v10 = _G[v7("\193\18\232\2\93\5", "\178\102\154\107\51\98")][v7("\235\2\119\76", "\136\106\22\62\152\55\135")];
	local v11 = _G[v7("\191\13\255\239\68\231", "\204\121\141\134\42\128\205")][v7("\150\94\227", "\229\43\129\62\198\36\74")];
	local v12 = _G[v7("\101\100\205\119\235\189", "\22\16\191\30\133\218\158\83")][v7("\7\23\145\82", "\96\100\228\48\85")];
	local v13 = _G[v7("\250\90\216\123\242\40", "\137\46\170\18\156\79\153")][v7("\191\196\104", "\205\161\24\54\54\128\52\186")];
	local v14 = _G[v7("\77\116\85\8\92", "\57\21\55\100")][v7("\55\246\70\24\53\237", "\84\153\40\123")];
	local v15 = _G[v7("\216\164\230\218\201", "\172\197\132\182")][v7("\214\63\180\30\10\5", "\191\81\199\123\120\113")];
	local v16 = _G[v7("\53\162\3\160", "\88\195\119\200\140\111\147")][v7("\36\127\90\149\56", "\72\27\63\237")];
	local v17 = _G[v7("\14\192\32\88\12\203\34", "\105\165\84\62")] or function()
		return _ENV;
	end;
	local v18 = _G[v7("\12\89\89\34\2\173\38\11\93\79\35\2", "\127\60\45\79\103\217\71")];
	local v19 = _G[v7("\146\209\182\182\191", "\226\178\215\218\211\210")];
	local v20 = _G[v7("\37\12\61\26\10\80", "\86\105\81\127\105\36\234\224")];
	local v21 = _G[v7("\185\233\37\124\251\93", "\204\135\85\29\152\54")] or _G[v7("\111\71\15\217\246", "\27\38\109\181\147")][v7("\41\17\7\239\248\212", "\92\127\119\142\155\191\63\160")];
	local v22 = _G[v7("\151\219\223\51\188\223\134\198", "\227\180\177\70\209\189")];
	local function v23(v28, v29, ...)
		local v30 = 0;
		local v31;
		local v32;
		local v33;
		local v34;
		local v35;
		local v36;
		local v37;
		local v38;
		local v39;
		local v40;
		local v41;
		local v42;
		local v43;
		while true do
			if (v30 == 0) then
				v31 = 0;
				v32 = nil;
				v33 = nil;
				v34 = nil;
				v30 = 1;
			end
			if (v30 == 1) then
				v35 = nil;
				v36 = nil;
				v37 = nil;
				v38 = nil;
				v30 = 2;
			end
			if (v30 == 3) then
				v43 = nil;
				while true do
					local v45 = 0;
					while true do
						if (0 == v45) then
							if (v31 == 7) then
								local v46 = 0;
								while true do
									if (v46 == 0) then
										function v43(v54, v55, v56)
											local v57 = 0;
											local v58;
											local v59;
											local v60;
											local v61;
											while true do
												if (0 == v57) then
													v58 = 0;
													v59 = nil;
													v57 = 1;
												end
												if (1 == v57) then
													v60 = nil;
													v61 = nil;
													v57 = 2;
												end
												if (v57 == 2) then
													while true do
														local v111 = 0;
														while true do
															if (v111 == 0) then
																if (v58 == 1) then
																	local v121 = 0;
																	while true do
																		if (v121 == 0) then
																			v61 = v54[1625 - (28 + 223 + 1371)];
																			return function(...)
																				local v143 = 0;
																				local v144;
																				local v145;
																				local v146;
																				local v147;
																				local v148;
																				local v149;
																				while true do
																					if (v143 == 2) then
																						v148 = nil;
																						v149 = nil;
																						v143 = 3;
																					end
																					if (v143 == 1) then
																						v146 = nil;
																						v147 = nil;
																						v143 = 2;
																					end
																					if (v143 == 0) then
																						v144 = 0;
																						v145 = nil;
																						v143 = 1;
																					end
																					if (v143 == 3) then
																						while true do
																							if (v144 == 0) then
																								local v170 = 0;
																								while true do
																									if (v170 == 1) then
																										v144 = 1;
																										break;
																									end
																									if (v170 == 0) then
																										v145 = 1;
																										v146 = -((1 + 2) - (7 - 5));
																										v170 = 1;
																									end
																								end
																							end
																							if (3 == v144) then
																								_G['A'], _G['B'] = v41(v19(v149));
																								if not _G['A'][70 - (51 + 18)] then
																									local v176 = 0;
																									local v177;
																									local v178;
																									while true do
																										if (0 == v176) then
																											v177 = 0;
																											v178 = nil;
																											v176 = 1;
																										end
																										if (v176 == 1) then
																											while true do
																												if (v177 == 0) then
																													v178 = v54[4][v145] or "?";
																													error(v7("\211\214\217\239\97\37\154\229\199\217\233\99\113\219\244\149\240", "\128\181\171\134\17\81\186") .. v178 .. v7("\39\86", "\122\108\167\74\91\232\178\107") .. _G['A'][(16 - 11) - (8 - 5)]);
																													break;
																												end
																											end
																											break;
																										end
																									end
																								else
																									return v21(_G['A'], 1 + 1, _G['B']);
																								end
																								break;
																							end
																							if (v144 == 2) then
																								local v171 = 0;
																								while true do
																									if (v171 == 1) then
																										v144 = 3;
																										break;
																									end
																									if (v171 == 0) then
																										v149 = nil;
																										function v149()
																											local v184 = 0;
																											local v185;
																											local v186;
																											local v187;
																											local v188;
																											local v189;
																											local v190;
																											local v191;
																											local v192;
																											local v193;
																											local v194;
																											while true do
																												if (v184 == 3) then
																													v193 = nil;
																													v194 = nil;
																													while true do
																														local v195 = 0;
																														local v196;
																														while true do
																															if (v195 == 0) then
																																v196 = 0;
																																while true do
																																	if (v196 == 0) then
																																		local v214 = 0;
																																		while true do
																																			if (v214 == 0) then
																																				v193 = v185[v145];
																																				v194 = v193[832 - (223 + 196 + 412)];
																																				v214 = 1;
																																			end
																																			if (v214 == 1) then
																																				v196 = 1;
																																				break;
																																			end
																																		end
																																	end
																																	if (v196 == 1) then
																																		if (v194 <= 33) then
																																			if (v194 <= ((3242 - (1191 + 254)) - ((2155 - (674 + 15)) + 315))) then
																																				if (v194 <= (21 - 14)) then
																																					if (v194 <= (1 + 2)) then
																																						if (v194 <= ((1251 - (158 + 16)) - ((545 - (58 + 61)) + (1891 - (1090 + 151))))) then
																																							if (v194 > ((469 - (351 + 118)) + (1203 - (7 + 1196)))) then
																																								local v225 = 0;
																																								local v226;
																																								local v227;
																																								while true do
																																									if (v225 == 1) then
																																										while true do
																																											if (0 == v226) then
																																												v227 = v193[6 - 4];
																																												v191[v227](v21(v191, v227 + ((3098 - 1704) - (982 + (498 - (41 + 46)))), v193[1 + 1 + (1228 - (1114 + 113))]));
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v225 == 0) then
																																										v226 = 0;
																																										v227 = nil;
																																										v225 = 1;
																																									end
																																								end
																																							else
																																								local v228 = 0;
																																								local v229;
																																								local v230;
																																								local v231;
																																								local v232;
																																								while true do
																																									if (v228 == 2) then
																																										while true do
																																											if (v229 == 0) then
																																												local v398 = 0;
																																												while true do
																																													if (v398 == 1) then
																																														v229 = 1;
																																														break;
																																													end
																																													if (v398 == 0) then
																																														v230 = v193[2];
																																														v231 = {v191[v230](v21(v191, v230 + 1, v146))};
																																														v398 = 1;
																																													end
																																												end
																																											end
																																											if (v229 == 1) then
																																												v232 = 0 - (0 - 0);
																																												for v436 = v230, v193[4] do
																																													local v437 = 0;
																																													local v438;
																																													while true do
																																														if (v437 == 0) then
																																															v438 = 0;
																																															while true do
																																																if (v438 == 0) then
																																																	v232 = v232 + 1 + (838 - (436 + 402));
																																																	v191[v436] = v231[v232];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v228 == 0) then
																																										v229 = 0;
																																										v230 = nil;
																																										v228 = 1;
																																									end
																																									if (v228 == 1) then
																																										v231 = nil;
																																										v232 = nil;
																																										v228 = 2;
																																									end
																																								end
																																							end
																																						elseif (v194 == (2 + 0)) then
																																							local v233 = 0;
																																							local v234;
																																							local v235;
																																							local v236;
																																							local v237;
																																							local v238;
																																							while true do
																																								if (v233 == 0) then
																																									v234 = 0;
																																									v235 = nil;
																																									v233 = 1;
																																								end
																																								if (1 == v233) then
																																									v236 = nil;
																																									v237 = nil;
																																									v233 = 2;
																																								end
																																								if (v233 == 2) then
																																									v238 = nil;
																																									while true do
																																										if (v234 == 0) then
																																											local v399 = 0;
																																											while true do
																																												if (v399 == 0) then
																																													v235 = v193[3 - 1];
																																													v236, v237 = v188(v191[v235](v21(v191, v235 + 1 + 0, v193[3 + 0])));
																																													v399 = 1;
																																												end
																																												if (v399 == 1) then
																																													v234 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v234 == 1) then
																																											local v400 = 0;
																																											while true do
																																												if (v400 == 0) then
																																													v146 = (v237 + v235) - (2 - 1);
																																													v238 = 955 - (117 + 838);
																																													v400 = 1;
																																												end
																																												if (v400 == 1) then
																																													v234 = 2;
																																													break;
																																												end
																																											end
																																										end
																																										if (v234 == 2) then
																																											for v439 = v235, v146 do
																																												local v440 = 0;
																																												local v441;
																																												while true do
																																													if (v440 == 0) then
																																														v441 = 0;
																																														while true do
																																															if (v441 == 0) then
																																																v238 = v238 + 1 + 0;
																																																v191[v439] = v236[v238];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							v191[v193[1102 - (686 + 414)]] = v191[v193[5 - 2]] - v191[v193[(5 + 1) - 2]];
																																						end
																																					elseif (v194 <= (1 + 4)) then
																																						if (v194 == (1123 - (586 + 533))) then
																																							v191[v193[(348 - (24 + 315)) - 7]] = v193[2 + (1 - 0)] + v191[v193[4]];
																																						elseif (v191[v193[2 + 0]] == v193[4]) then
																																							v145 = v145 + ((1212 - 526) - (17 + 498 + 170));
																																						else
																																							v145 = v193[(1397 + 261) - ((2318 - (1659 + 32)) + 345 + 683)];
																																						end
																																					elseif (v194 == ((30 - 18) - (775 - (732 + 37)))) then
																																						local v241 = 0;
																																						local v242;
																																						local v243;
																																						local v244;
																																						while true do
																																							if (v241 == 1) then
																																								v244 = nil;
																																								while true do
																																									if (v242 == 1) then
																																										for v442 = v243 + (811 - ((2042 - (252 + 1118)) + 138)), v193[2 + 2] do
																																											v244 = v244 .. v191[v442];
																																										end
																																										v191[v193[2 + 0]] = v244;
																																										break;
																																									end
																																									if (v242 == 0) then
																																										local v402 = 0;
																																										while true do
																																											if (v402 == 0) then
																																												v243 = v193[2 + 1];
																																												v244 = v191[v243];
																																												v402 = 1;
																																											end
																																											if (v402 == 1) then
																																												v242 = 1;
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v241 == 0) then
																																								v242 = 0;
																																								v243 = nil;
																																								v241 = 1;
																																							end
																																						end
																																					else
																																						local v245 = 0;
																																						local v246;
																																						local v247;
																																						while true do
																																							if (v245 == 1) then
																																								while true do
																																									if (0 == v246) then
																																										v247 = v193[(1 + 2) - (1233 - (188 + 1044))];
																																										v191[v247] = v191[v247](v21(v191, v247 + 1, v193[(358 + 302) - ((923 - 681) + 175 + 240)]));
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (0 == v245) then
																																								v246 = 0;
																																								v247 = nil;
																																								v245 = 1;
																																							end
																																						end
																																					end
																																				elseif (v194 <= (1724 - (1213 + 500))) then
																																					if (v194 <= (7 + 2)) then
																																						if (v194 == (1 + 7)) then
																																							local v248 = 0;
																																							local v249;
																																							local v250;
																																							while true do
																																								if (v248 == 1) then
																																									while true do
																																										if (v249 == 0) then
																																											v250 = v193[5 - 3];
																																											do
																																												return v21(v191, v250, v146);
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v248 == 0) then
																																									v249 = 0;
																																									v250 = nil;
																																									v248 = 1;
																																								end
																																							end
																																						elseif (v191[v193[843 - (89 + 752)]] < v191[v193[1685 - (1210 + 471)]]) then
																																							v145 = v145 + (4 - 3);
																																						else
																																							v145 = v193[3 + 0];
																																						end
																																					elseif (v194 > (38 - 28)) then
																																						v191[v193[(156 + 436) - ((496 - 391) + (2072 - (570 + 1017)))]] = v191[v193[(184 + 834) - (79 + 54 + 882)]] / v193[18 - 14];
																																					else
																																						v191[v193[1 + 0 + 1]] = v191[v193[3]] / v191[v193[3 + 1]];
																																					end
																																				elseif (v194 <= ((22 - 10) + 1 + 0)) then
																																					if (v194 == (17 - 5)) then
																																						v191[v193[(113 + 107) - (25 + 135 + 58)]] = v191[v193[(1628 - (77 + 5)) - ((2060 - (507 + 492)) + 3 + 479)]] - v193[(756 - (528 + 222)) - 2];
																																					else
																																						local v254 = 0;
																																						local v255;
																																						local v256;
																																						local v257;
																																						local v258;
																																						local v259;
																																						while true do
																																							if (v254 == 1) then
																																								v257 = nil;
																																								v258 = nil;
																																								v254 = 2;
																																							end
																																							if (v254 == 2) then
																																								v259 = nil;
																																								while true do
																																									if (v255 == 0) then
																																										local v406 = 0;
																																										while true do
																																											if (v406 == 0) then
																																												v256 = v193[2 + 0];
																																												v257, v258 = v188(v191[v256](v21(v191, v256 + (3 - 2) + 0, v146)));
																																												v406 = 1;
																																											end
																																											if (v406 == 1) then
																																												v255 = 1;
																																												break;
																																											end
																																										end
																																									end
																																									if (1 == v255) then
																																										local v407 = 0;
																																										while true do
																																											if (v407 == 1) then
																																												v255 = 2;
																																												break;
																																											end
																																											if (v407 == 0) then
																																												v146 = (v258 + v256) - (1 + 0);
																																												v259 = 0 + 0;
																																												v407 = 1;
																																											end
																																										end
																																									end
																																									if (v255 == 2) then
																																										for v443 = v256, v146 do
																																											local v444 = 0;
																																											local v445;
																																											while true do
																																												if (v444 == 0) then
																																													v445 = 0;
																																													while true do
																																														if (v445 == 0) then
																																															v259 = v259 + (935 - (102 + 832));
																																															v191[v443] = v257[v259];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (0 == v254) then
																																								v255 = 0;
																																								v256 = nil;
																																								v254 = 1;
																																							end
																																						end
																																					end
																																				elseif (v194 <= ((2122 - 644) - ((2493 - 1138) + 109))) then
																																					v191[v193[2 + 0]] = {};
																																				elseif (v194 == (34 - (15 + 4))) then
																																					local v355 = 0;
																																					local v356;
																																					local v357;
																																					local v358;
																																					local v359;
																																					while true do
																																						if (v355 == 0) then
																																							v356 = 0;
																																							v357 = nil;
																																							v355 = 1;
																																						end
																																						if (2 == v355) then
																																							while true do
																																								if (v356 == 0) then
																																									local v459 = 0;
																																									while true do
																																										if (v459 == 1) then
																																											v356 = 1;
																																											break;
																																										end
																																										if (v459 == 0) then
																																											v357 = v193[2];
																																											v358 = {v191[v357](v191[v357 + 1 + (0 - 0)])};
																																											v459 = 1;
																																										end
																																									end
																																								end
																																								if (v356 == 1) then
																																									v359 = 192 - (16 + 176);
																																									for v471 = v357, v193[4 - 0] do
																																										local v472 = 0;
																																										local v473;
																																										while true do
																																											if (v472 == 0) then
																																												v473 = 0;
																																												while true do
																																													if (v473 == 0) then
																																														v359 = v359 + (1159 - ((1240 - (303 + 242)) + 463));
																																														v191[v471] = v358[v359];
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																						if (v355 == 1) then
																																							v358 = nil;
																																							v359 = nil;
																																							v355 = 2;
																																						end
																																					end
																																				else
																																					local v360 = 0;
																																					local v361;
																																					local v362;
																																					while true do
																																						if (0 == v360) then
																																							v361 = 0;
																																							v362 = nil;
																																							v360 = 1;
																																						end
																																						if (v360 == 1) then
																																							while true do
																																								if (v361 == 0) then
																																									v362 = v193[1 + 1];
																																									do
																																										return v21(v191, v362, v362 + v193[4 - (1 - 0)]);
																																									end
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																			elseif (v194 <= (36 - 12)) then
																																				if (v194 <= (19 + 1)) then
																																					if (v194 <= ((999 - (953 + 43)) + 7 + 8)) then
																																						if (v194 == (5 + 12)) then
																																							local v261 = 0;
																																							local v262;
																																							local v263;
																																							local v264;
																																							while true do
																																								if (0 == v261) then
																																									v262 = 0;
																																									v263 = nil;
																																									v261 = 1;
																																								end
																																								if (v261 == 1) then
																																									v264 = nil;
																																									while true do
																																										if (v262 == 0) then
																																											local v408 = 0;
																																											while true do
																																												if (1 == v408) then
																																													v262 = 1;
																																													break;
																																												end
																																												if (v408 == 0) then
																																													v263 = v193[(1700 - (1057 + 641)) - (0 + 0)];
																																													v264 = v191[v263];
																																													v408 = 1;
																																												end
																																											end
																																										end
																																										if (v262 == 1) then
																																											for v446 = v263 + 1, v146 do
																																												v15(v264, v191[v446]);
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							v56[v193[(6 - 4) + (655 - (317 + 337))]] = v191[v193[(1847 - (720 + 496)) - ((1093 - (326 + 446)) + (627 - 319))]];
																																						end
																																					elseif (v194 > ((4 - 1) + (46 - 30))) then
																																						local v267 = 0;
																																						local v268;
																																						local v269;
																																						local v270;
																																						while true do
																																							if (v267 == 1) then
																																								v270 = nil;
																																								while true do
																																									if (v268 == 1) then
																																										for v447 = 1, #v190 do
																																											local v448 = 0;
																																											local v449;
																																											local v450;
																																											while true do
																																												if (v448 == 1) then
																																													while true do
																																														if (v449 == 0) then
																																															v450 = v190[v447];
																																															for v532 = 0, #v450 do
																																																local v533 = 0;
																																																local v534;
																																																local v535;
																																																local v536;
																																																local v537;
																																																while true do
																																																	if (1 == v533) then
																																																		v536 = nil;
																																																		v537 = nil;
																																																		v533 = 2;
																																																	end
																																																	if (v533 == 2) then
																																																		while true do
																																																			if (v534 == 1) then
																																																				v537 = v535[2];
																																																				if ((v536 == v191) and (v537 >= v269)) then
																																																					local v555 = 0;
																																																					local v556;
																																																					while true do
																																																						if (v555 == 0) then
																																																							v556 = 0;
																																																							while true do
																																																								if (v556 == 0) then
																																																									v270[v537] = v536[v537];
																																																									v535[(484 - (393 + 90)) + 0 + 0] = v270;
																																																									break;
																																																								end
																																																							end
																																																							break;
																																																						end
																																																					end
																																																				end
																																																				break;
																																																			end
																																																			if (v534 == 0) then
																																																				local v554 = 0;
																																																				while true do
																																																					if (v554 == 0) then
																																																						v535 = v450[v532];
																																																						v536 = v535[1];
																																																						v554 = 1;
																																																					end
																																																					if (v554 == 1) then
																																																						v534 = 1;
																																																						break;
																																																					end
																																																				end
																																																			end
																																																		end
																																																		break;
																																																	end
																																																	if (v533 == 0) then
																																																		v534 = 0;
																																																		v535 = nil;
																																																		v533 = 1;
																																																	end
																																																end
																																															end
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																												if (v448 == 0) then
																																													v449 = 0;
																																													v450 = nil;
																																													v448 = 1;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v268 == 0) then
																																										local v409 = 0;
																																										while true do
																																											if (v409 == 0) then
																																												v269 = v193[(224 + 20) - ((1620 - (1252 + 156)) + (61 - 31))];
																																												v270 = {};
																																												v409 = 1;
																																											end
																																											if (1 == v409) then
																																												v268 = 1;
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v267 == 0) then
																																								v268 = 0;
																																								v269 = nil;
																																								v267 = 1;
																																							end
																																						end
																																					else
																																						v191[v193[1 + 1]] = v191[v193[(1656 - (1496 + 158)) + 1 + 0]] % v193[4];
																																					end
																																				elseif (v194 <= 22) then
																																					if (v194 == (1666 - (753 + 892))) then
																																						local v272 = 0;
																																						local v273;
																																						local v274;
																																						local v275;
																																						local v276;
																																						while true do
																																							if (v272 == 1) then
																																								v275 = nil;
																																								v276 = nil;
																																								v272 = 2;
																																							end
																																							if (v272 == 2) then
																																								while true do
																																									if (v273 == 2) then
																																										for v451 = 1 + 0 + (183 - (131 + 52)), v193[(2016 - (827 + 701)) - ((1542 - (1367 + 145)) + 454)] do
																																											local v452 = 0;
																																											local v453;
																																											local v454;
																																											while true do
																																												if (v452 == 0) then
																																													v453 = 0;
																																													v454 = nil;
																																													v452 = 1;
																																												end
																																												if (v452 == 1) then
																																													while true do
																																														if (v453 == 0) then
																																															local v528 = 0;
																																															while true do
																																																if (v528 == 0) then
																																																	v145 = v145 + 1;
																																																	v454 = v185[v145];
																																																	v528 = 1;
																																																end
																																																if (v528 == 1) then
																																																	v453 = 1;
																																																	break;
																																																end
																																															end
																																														end
																																														if (v453 == 1) then
																																															if (v454[(1 - 0) - 0] == (353 - (21 + 278))) then
																																																v276[v451 - (1429 - (630 + 798))] = {v191,v454[3]};
																																															else
																																																v276[v451 - 1] = {v55,v454[3]};
																																															end
																																															v190[#v190 + 1] = v276;
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										v191[v193[1821 - ((2368 - (1062 + 897)) + 511 + 899)]] = v43(v274, v275, v56);
																																										break;
																																									end
																																									if (1 == v273) then
																																										local v411 = 0;
																																										while true do
																																											if (v411 == 1) then
																																												v273 = 2;
																																												break;
																																											end
																																											if (v411 == 0) then
																																												v276 = {};
																																												v275 = v18({}, {[v7("\13\153\62\26\136\241\42", "\82\198\87\116\236\148")]=function(v496, v497)
																																													local v498 = 0;
																																													local v499;
																																													local v500;
																																													while true do
																																														if (v498 == 0) then
																																															v499 = 0;
																																															v500 = nil;
																																															v498 = 1;
																																														end
																																														if (1 == v498) then
																																															while true do
																																																if (0 == v499) then
																																																	local v545 = 0;
																																																	while true do
																																																		if (v545 == 0) then
																																																			v500 = v276[v497];
																																																			return v500[4 - 3][v500[773 - (249 + 522)]];
																																																		end
																																																	end
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end,[v7("\210\55\53\141\40\22\227\12\62\144", "\141\104\91\232\95\127")]=function(v501, v502, v503)
																																													local v504 = 0;
																																													local v505;
																																													local v506;
																																													while true do
																																														if (0 == v504) then
																																															v505 = 0;
																																															v506 = nil;
																																															v504 = 1;
																																														end
																																														if (1 == v504) then
																																															while true do
																																																if (v505 == 0) then
																																																	v506 = v276[v502];
																																																	v506[4 - 3][v506[1 + 1]] = v503;
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end});
																																												v411 = 1;
																																											end
																																										end
																																									end
																																									if (0 == v273) then
																																										local v412 = 0;
																																										while true do
																																											if (v412 == 0) then
																																												v274 = v186[v193[1879 - (778 + 335 + (1387 - (306 + 318)))]];
																																												v275 = nil;
																																												v412 = 1;
																																											end
																																											if (v412 == 1) then
																																												v273 = 1;
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v272 == 0) then
																																								v273 = 0;
																																								v274 = nil;
																																								v272 = 1;
																																							end
																																						end
																																					else
																																						local v277 = 0;
																																						local v278;
																																						local v279;
																																						local v280;
																																						local v281;
																																						while true do
																																							if (v277 == 1) then
																																								v280 = nil;
																																								v281 = nil;
																																								v277 = 2;
																																							end
																																							if (2 == v277) then
																																								while true do
																																									if (v278 == 0) then
																																										local v413 = 0;
																																										while true do
																																											if (v413 == 0) then
																																												v279 = v193[(2 - 0) + 0 + 0];
																																												v280 = v191[v279];
																																												v413 = 1;
																																											end
																																											if (1 == v413) then
																																												v278 = 1;
																																												break;
																																											end
																																										end
																																									end
																																									if (1 == v278) then
																																										v281 = v191[v279 + (167 - (30 + 60 + 45 + 30))];
																																										if (v281 > 0) then
																																											if (v280 > v191[v279 + (1890 - (754 + 1135))]) then
																																												v145 = v193[3];
																																											else
																																												v191[v279 + 3] = v280;
																																											end
																																										elseif (v280 < v191[v279 + 1]) then
																																											v145 = v193[3 + 0];
																																										else
																																											v191[v279 + ((222 + 491) - (315 + 329 + (792 - (615 + 111))))] = v280;
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v277 == 0) then
																																								v278 = 0;
																																								v279 = nil;
																																								v277 = 1;
																																							end
																																						end
																																					end
																																				elseif (v194 > ((1324 - 779) - (258 + 200 + 38 + 26))) then
																																					if not v191[v193[(13 - 8) - 3]] then
																																						v145 = v145 + 1;
																																					else
																																						v145 = v193[1640 - (1404 + 233)];
																																					end
																																				else
																																					do
																																						return;
																																					end
																																				end
																																			elseif (v194 <= (53 - 25)) then
																																				if (v194 <= 26) then
																																					if (v194 > (19 + 6)) then
																																						local v282 = 0;
																																						local v283;
																																						local v284;
																																						while true do
																																							if (v282 == 0) then
																																								v283 = 0;
																																								v284 = nil;
																																								v282 = 1;
																																							end
																																							if (1 == v282) then
																																								while true do
																																									if (v283 == 0) then
																																										v284 = v193[3 - 1];
																																										v191[v284] = v191[v284](v21(v191, v284 + 1 + 0, v146));
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					elseif (v191[v193[1 + 1 + 0 + 0]] ~= v193[4]) then
																																						v145 = v145 + ((542 - 237) - ((1527 - (1266 + 229)) + (696 - (368 + 56))));
																																					else
																																						v145 = v193[(698 + 618) - (1310 + (1989 - (1219 + 767)))];
																																					end
																																				elseif (v194 > (40 - 13)) then
																																					v191[v193[2]] = v191[v193[4 - 1]] * v191[v193[698 - (217 + 477)]];
																																				else
																																					local v286 = 0;
																																					local v287;
																																					local v288;
																																					local v289;
																																					local v290;
																																					while true do
																																						if (1 == v286) then
																																							v289 = nil;
																																							v290 = nil;
																																							v286 = 2;
																																						end
																																						if (0 == v286) then
																																							v287 = 0;
																																							v288 = nil;
																																							v286 = 1;
																																						end
																																						if (v286 == 2) then
																																							while true do
																																								if (v287 == 0) then
																																									local v417 = 0;
																																									while true do
																																										if (1 == v417) then
																																											v287 = 1;
																																											break;
																																										end
																																										if (v417 == 0) then
																																											v288 = v193[(4 + 2) - (4 + 0)];
																																											v289 = {v191[v288](v21(v191, v288 + ((996 + 895) - ((881 - (164 + 303)) + 1476)), v193[1694 - (358 + 1333)]))};
																																											v417 = 1;
																																										end
																																									end
																																								end
																																								if (v287 == 1) then
																																									v290 = 0 - 0;
																																									for v455 = v288, v193[(2 - 1) + 3] do
																																										local v456 = 0;
																																										local v457;
																																										while true do
																																											if (v456 == 0) then
																																												v457 = 0;
																																												while true do
																																													if (0 == v457) then
																																														v290 = v290 + (489 - (294 + 194));
																																														v191[v455] = v289[v290];
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																			elseif (v194 <= ((2075 - (277 + 212)) - (660 + 896))) then
																																				if (v194 > (15 + 14)) then
																																					v191[v193[6 - 4]] = #v191[v193[3 + (0 - 0)]];
																																				else
																																					v145 = v193[3];
																																				end
																																			elseif (v194 <= 31) then
																																				local v293 = 0;
																																				local v294;
																																				local v295;
																																				local v296;
																																				while true do
																																					if (v293 == 1) then
																																						v296 = nil;
																																						while true do
																																							if (v294 == 0) then
																																								local v418 = 0;
																																								while true do
																																									if (1 == v418) then
																																										v294 = 1;
																																										break;
																																									end
																																									if (v418 == 0) then
																																										v295 = v193[2];
																																										v296 = v191[v193[(1745 - (1252 + 489)) - (1920 - (130 + 1789))]];
																																										v418 = 1;
																																									end
																																								end
																																							end
																																							if (v294 == 1) then
																																								v191[v295 + (3 - 2)] = v296;
																																								v191[v295] = v296[v191[v193[4]]];
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																					if (0 == v293) then
																																						v294 = 0;
																																						v295 = nil;
																																						v293 = 1;
																																					end
																																				end
																																			elseif (v194 == (1942 - (1686 + 224))) then
																																				for v386 = v193[2], v193[3 - 0] do
																																					v191[v386] = nil;
																																				end
																																			else
																																				local v365 = 0;
																																				local v366;
																																				local v367;
																																				local v368;
																																				local v369;
																																				local v370;
																																				while true do
																																					if (v365 == 0) then
																																						v366 = 0;
																																						v367 = nil;
																																						v365 = 1;
																																					end
																																					if (2 == v365) then
																																						v370 = nil;
																																						while true do
																																							if (v366 == 0) then
																																								local v461 = 0;
																																								while true do
																																									if (v461 == 1) then
																																										v366 = 1;
																																										break;
																																									end
																																									if (v461 == 0) then
																																										v367 = v193[(2 - 0) + (0 - 0)];
																																										v368, v369 = v188(v191[v367](v191[v367 + (1701 - (911 + 789))]));
																																										v461 = 1;
																																									end
																																								end
																																							end
																																							if (v366 == 1) then
																																								local v462 = 0;
																																								while true do
																																									if (v462 == 1) then
																																										v366 = 2;
																																										break;
																																									end
																																									if (v462 == 0) then
																																										v146 = (v369 + v367) - ((2 - 0) - (1195 - (257 + 937)));
																																										v370 = 0 + 0;
																																										v462 = 1;
																																									end
																																								end
																																							end
																																							if (v366 == 2) then
																																								for v483 = v367, v146 do
																																									local v484 = 0;
																																									local v485;
																																									while true do
																																										if (v484 == 0) then
																																											v485 = 0;
																																											while true do
																																												if (v485 == 0) then
																																													v370 = v370 + (2 - 1);
																																													v191[v483] = v368[v370];
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																					if (v365 == 1) then
																																						v368 = nil;
																																						v369 = nil;
																																						v365 = 2;
																																					end
																																				end
																																			end
																																		elseif (v194 <= (24 + 26)) then
																																			if (v194 <= (144 - 103)) then
																																				if (v194 <= (172 - 135)) then
																																					if (v194 <= (13 + 0 + 22)) then
																																						if (v194 == (53 - 19)) then
																																							v191[v193[(8 + 1) - (1 + 6)]] = v193[3] ~= ((48 - (15 + 33)) - 0);
																																						else
																																							v191[v193[1 + 1]] = v191[v193[3]] * v193[4];
																																						end
																																					elseif (v194 == (216 - (38 + 90 + (141 - 89)))) then
																																						v191[v193[2 + (0 - 0)]][v191[v193[(272 - (197 + 67)) - (135 - (106 + 24))]]] = v193[(6 + 13) - 15];
																																					elseif (v191[v193[1592 - (640 + 950)]] < v193[(39 - 29) - (15 - 9)]) then
																																						v145 = v145 + ((33 + 381) - (63 + 350));
																																					else
																																						v145 = v193[(13 - 10) - (0 + 0)];
																																					end
																																				elseif (v194 <= (69 - 30)) then
																																					if (v194 == ((655 - (252 + 383)) + (29 - 11))) then
																																						if (v193[2] == v191[v193[(987 - (973 + 13)) + (426 - (234 + 189))]]) then
																																							v145 = v145 + 1;
																																						else
																																							v145 = v193[1739 - (863 + 873)];
																																						end
																																					else
																																						v191[v193[1 + 1 + (1386 - (677 + 709))]] = v191[v193[525 - (258 + 264)]] + v193[1034 - (1019 + 11)];
																																					end
																																				elseif (v194 > (148 - 108)) then
																																					v191[v193[2]] = v193[3];
																																				else
																																					v55[v193[1397 - (831 + 563)]] = v191[v193[935 - (139 + 794)]];
																																				end
																																			elseif (v194 <= (39 + 6)) then
																																				if (v194 <= (1515 - (1142 + 330))) then
																																					if (v194 > ((1045 - 780) - ((1924 - (128 + 1593)) + (1394 - (1298 + 76))))) then
																																						local v306 = 0;
																																						local v307;
																																						local v308;
																																						while true do
																																							if (v306 == 0) then
																																								v307 = 0;
																																								v308 = nil;
																																								v306 = 1;
																																							end
																																							if (1 == v306) then
																																								while true do
																																									if (v307 == 0) then
																																										v308 = v193[2];
																																										v191[v308] = v191[v308]();
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					else
																																						local v309 = 0;
																																						local v310;
																																						local v311;
																																						while true do
																																							if (v309 == 1) then
																																								while true do
																																									if (v310 == 0) then
																																										v311 = v193[1230 - (42 + 1186)];
																																										v191[v311] = v191[v311](v191[v311 + (339 - (83 + (827 - 572)))]);
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v309 == 0) then
																																								v310 = 0;
																																								v311 = nil;
																																								v309 = 1;
																																							end
																																						end
																																					end
																																				elseif (v194 > (195 - 151)) then
																																					local v312 = 0;
																																					local v313;
																																					local v314;
																																					while true do
																																						if (v312 == 0) then
																																							v313 = 0;
																																							v314 = nil;
																																							v312 = 1;
																																						end
																																						if (1 == v312) then
																																							while true do
																																								if (v313 == 0) then
																																									v314 = v193[(1049 + 200) - ((1272 - (234 + 1023)) + (1851 - (301 + 318)))];
																																									v191[v314](v21(v191, v314 + 1 + 0, v146));
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				else
																																					local v315 = 0;
																																					local v316;
																																					local v317;
																																					local v318;
																																					while true do
																																						if (0 == v315) then
																																							v316 = 0;
																																							v317 = nil;
																																							v315 = 1;
																																						end
																																						if (v315 == 1) then
																																							v318 = nil;
																																							while true do
																																								if (1 == v316) then
																																									for v458 = v317 + 1, v193[3] do
																																										v15(v318, v191[v458]);
																																									end
																																									break;
																																								end
																																								if (v316 == 0) then
																																									local v427 = 0;
																																									while true do
																																										if (v427 == 0) then
																																											v317 = v193[(1046 - (667 + 374)) - (1861 - (1831 + 27))];
																																											v318 = v191[v317];
																																											v427 = 1;
																																										end
																																										if (v427 == 1) then
																																											v316 = 1;
																																											break;
																																										end
																																									end
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																			elseif (v194 <= 47) then
																																				if (v194 == 46) then
																																					v191[v193[1537 - (95 + 1440)]] = v191[v193[3]][v193[1 + 3]];
																																				else
																																					v191[v193[(2817 - (280 + 560)) - ((3921 - 2040) + (1780 - (55 + 1631)))]] = v55[v193[3]];
																																				end
																																			elseif (v194 <= (37 + 11)) then
																																				local v323 = 0;
																																				local v324;
																																				local v325;
																																				while true do
																																					if (v323 == 1) then
																																						while true do
																																							if (v324 == 0) then
																																								v325 = v193[1930 - (621 + 1307)];
																																								do
																																									return v191[v325](v21(v191, v325 + (4 - 3) + 0 + 0, v146));
																																								end
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																					if (v323 == 0) then
																																						v324 = 0;
																																						v325 = nil;
																																						v323 = 1;
																																					end
																																				end
																																			elseif (v194 == 49) then
																																				v191[v193[742 - (578 + 162)]] = v191[v193[5 - 2]][v191[v193[3 + (4 - 3)]]];
																																			else
																																				local v375 = 0;
																																				local v376;
																																				local v377;
																																				while true do
																																					if (1 == v375) then
																																						while true do
																																							if (v376 == 0) then
																																								v377 = v193[364 - (258 + 104)];
																																								v191[v377](v191[v377 + 1]);
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																					if (v375 == 0) then
																																						v376 = 0;
																																						v377 = nil;
																																						v375 = 1;
																																					end
																																				end
																																			end
																																		elseif (v194 <= (294 - (77 + 159))) then
																																			if (v194 <= (21 + 16 + 17)) then
																																				if (v194 <= (114 - (8 + 54))) then
																																					if (v194 > (177 - 126)) then
																																						local v326 = 0;
																																						local v327;
																																						local v328;
																																						local v329;
																																						local v330;
																																						while true do
																																							if (v326 == 2) then
																																								while true do
																																									if (v327 == 1) then
																																										local v429 = 0;
																																										while true do
																																											if (v429 == 1) then
																																												v327 = 2;
																																												break;
																																											end
																																											if (v429 == 0) then
																																												v330 = v191[v328] + v329;
																																												v191[v328] = v330;
																																												v429 = 1;
																																											end
																																										end
																																									end
																																									if (v327 == 0) then
																																										local v430 = 0;
																																										while true do
																																											if (0 == v430) then
																																												v328 = v193[(371 - (282 + 88)) + 1];
																																												v329 = v191[v328 + ((5410 - 4036) - (805 + 567))];
																																												v430 = 1;
																																											end
																																											if (1 == v430) then
																																												v327 = 1;
																																												break;
																																											end
																																										end
																																									end
																																									if (v327 == 2) then
																																										if (v329 > ((0 + 0) - (0 - 0))) then
																																											if (v330 <= v191[v328 + (715 - (318 + 396))]) then
																																												local v511 = 0;
																																												local v512;
																																												while true do
																																													if (v511 == 0) then
																																														v512 = 0;
																																														while true do
																																															if (v512 == 0) then
																																																v145 = v193[3];
																																																v191[v328 + (5 - 2)] = v330;
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																										elseif (v330 >= v191[v328 + (1 - 0)]) then
																																											local v513 = 0;
																																											local v514;
																																											while true do
																																												if (v513 == 0) then
																																													v514 = 0;
																																													while true do
																																														if (v514 == 0) then
																																															v145 = v193[1 + 2];
																																															v191[v328 + 1 + 2] = v330;
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v326 == 1) then
																																								v329 = nil;
																																								v330 = nil;
																																								v326 = 2;
																																							end
																																							if (v326 == 0) then
																																								v327 = 0;
																																								v328 = nil;
																																								v326 = 1;
																																							end
																																						end
																																					else
																																						local v331 = 0;
																																						local v332;
																																						local v333;
																																						local v334;
																																						while true do
																																							if (1 == v331) then
																																								v334 = nil;
																																								while true do
																																									if (v332 == 1) then
																																										v191[v333 + 1 + 0] = v334;
																																										v191[v333] = v334[v193[14 - 10]];
																																										break;
																																									end
																																									if (v332 == 0) then
																																										local v434 = 0;
																																										while true do
																																											if (v434 == 1) then
																																												v332 = 1;
																																												break;
																																											end
																																											if (v434 == 0) then
																																												v333 = v193[1 + 1];
																																												v334 = v191[v193[1420 - (1334 + 83)]];
																																												v434 = 1;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v331 == 0) then
																																								v332 = 0;
																																								v333 = nil;
																																								v331 = 1;
																																							end
																																						end
																																					end
																																				elseif (v194 > (571 - (246 + 272))) then
																																					v191[v193[2]] = v191[v193[3]];
																																				elseif (v191[v193[1344 - (950 + 392)]] == v191[v193[1 + 3]]) then
																																					v145 = v145 + 1;
																																				else
																																					v145 = v193[2 + 1];
																																				end
																																			elseif (v194 <= (437 - (21 + 360))) then
																																				if (v194 > (35 + 20)) then
																																					v191[v193[(3580 - (514 + 1411)) - (606 + 366 + (1322 - 641))]]();
																																				elseif (v191[v193[1 + 1]] ~= v191[v193[686 - (167 + 515)]]) then
																																					v145 = v145 + (412 - (10 + 401));
																																				else
																																					v145 = v193[5 - 2];
																																				end
																																			elseif (v194 == (36 + 21)) then
																																				v191[v193[2]][v191[v193[361 - ((1545 - (749 + 730)) + 153 + 139)]]] = v191[v193[886 - (226 + 656)]];
																																			else
																																				local v339 = 0;
																																				local v340;
																																				local v341;
																																				while true do
																																					if (v339 == 1) then
																																						while true do
																																							if (v340 == 0) then
																																								v341 = v193[163 - (84 + 77)];
																																								do
																																									return v191[v341](v21(v191, v341 + (1817 - (865 + 951)), v193[7 - 4]));
																																								end
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																					if (v339 == 0) then
																																						v340 = 0;
																																						v341 = nil;
																																						v339 = 1;
																																					end
																																				end
																																			end
																																		elseif (v194 <= ((143 - 104) + 23)) then
																																			if (v194 <= (889 - (775 + 54))) then
																																				if (v194 == ((247 - (6 + 16)) - 166)) then
																																					if (v193[2] < v191[v193[4]]) then
																																						v145 = v145 + 1 + 0;
																																					else
																																						v145 = v193[3];
																																					end
																																				else
																																					local v342 = 0;
																																					local v343;
																																					local v344;
																																					local v345;
																																					local v346;
																																					local v347;
																																					while true do
																																						if (v342 == 3) then
																																							if v347 then
																																								local v395 = 0;
																																								local v396;
																																								while true do
																																									if (v395 == 0) then
																																										v396 = 0;
																																										while true do
																																											if (v396 == 0) then
																																												v191[v345] = v347;
																																												v145 = v193[(2707 - (566 + 1226)) - (276 + (1405 - (555 + 214)))];
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							else
																																								v145 = v145 + 1 + 0;
																																							end
																																							break;
																																						end
																																						if (v342 == 0) then
																																							v343 = v193[4 - 2];
																																							v344 = v193[7 - 3];
																																							v342 = 1;
																																						end
																																						if (v342 == 1) then
																																							v345 = v343 + 2;
																																							v346 = {v191[v343](v191[v343 + 1], v191[v345])};
																																							v342 = 2;
																																						end
																																						if (v342 == 2) then
																																							for v391 = (1976 - 1093) - ((712 - (177 + 162)) + 509), v344 do
																																								v191[v345 + v391] = v346[v391];
																																							end
																																							v347 = v346[1];
																																							v342 = 3;
																																						end
																																					end
																																				end
																																			elseif (v194 == (174 - 113)) then
																																				v191[v193[803 - (273 + 528)]] = v191[v193[(1514 - (195 + 1314)) - (3 - 1)]] + v191[v193[4]];
																																			else
																																				do
																																					return v191[v193[(3 - 2) + 1]];
																																				end
																																			end
																																		elseif (v194 <= (48 + 0 + (23 - 7))) then
																																			if (v194 == ((2810 - (200 + 1614)) - ((2191 - (557 + 858)) + (618 - 461)))) then
																																				v191[v193[2]] = v43(v186[v193[(389 - (381 + 3)) - (116 - (30 + 84))]], nil, v56);
																																			else
																																				v191[v193[(453 + 157) - (287 + 55 + 266)]] = v191[v193[3 + 0]] % v191[v193[1672 - (1566 + 102)]];
																																			end
																																		elseif (v194 <= 65) then
																																			v191[v193[2 + 0 + 0]] = v56[v193[3 + 0 + 0]];
																																		elseif (v194 > (31 + 35)) then
																																			if v191[v193[(6081 - 4645) - (35 + 509 + 800 + 90)]] then
																																				v145 = v145 + (880 - (156 + 723));
																																			else
																																				v145 = v193[86 - (23 + 60)];
																																			end
																																		else
																																			local v381 = 0;
																																			local v382;
																																			local v383;
																																			local v384;
																																			local v385;
																																			while true do
																																				if (v381 == 2) then
																																					while true do
																																						if (v382 == 1) then
																																							v385 = v193[(2 + 3) - 2];
																																							for v493 = 1149 - ((859 - (152 + 58)) + (1650 - (647 + 504))), v385 do
																																								v384[v493] = v191[v383 + v493];
																																							end
																																							break;
																																						end
																																						if (v382 == 0) then
																																							local v465 = 0;
																																							while true do
																																								if (v465 == 0) then
																																									v383 = v193[2 + 0];
																																									v384 = v191[v383];
																																									v465 = 1;
																																								end
																																								if (v465 == 1) then
																																									v382 = 1;
																																									break;
																																								end
																																							end
																																						end
																																					end
																																					break;
																																				end
																																				if (v381 == 0) then
																																					v382 = 0;
																																					v383 = nil;
																																					v381 = 1;
																																				end
																																				if (v381 == 1) then
																																					v384 = nil;
																																					v385 = nil;
																																					v381 = 2;
																																				end
																																			end
																																		end
																																		v145 = v145 + 1 + 0;
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																													break;
																												end
																												if (v184 == 0) then
																													v185 = v59;
																													v186 = v60;
																													v187 = v61;
																													v184 = 1;
																												end
																												if (v184 == 2) then
																													v191 = {};
																													for v197 = 0, v148 do
																														if (v197 >= v187) then
																															v189[v197 - v187] = v147[v197 + (1588 - (1082 + 505))];
																														else
																															v191[v197] = v147[v197 + (2 - 1) + 0 + 0];
																														end
																													end
																													v192 = (v148 - v187) + 1;
																													v184 = 3;
																												end
																												if (v184 == 1) then
																													v188 = v41;
																													v189 = {};
																													v190 = {};
																													v184 = 2;
																												end
																											end
																										end
																										v171 = 1;
																									end
																								end
																							end
																							if (v144 == 1) then
																								local v172 = 0;
																								while true do
																									if (v172 == 0) then
																										v147 = {...};
																										v148 = v20("#", ...) - (1095 - (112 + 982));
																										v172 = 1;
																									end
																									if (v172 == 1) then
																										v144 = 2;
																										break;
																									end
																								end
																							end
																						end
																						break;
																					end
																				end
																			end;
																		end
																	end
																end
																if (v58 == 0) then
																	local v122 = 0;
																	while true do
																		if (v122 == 1) then
																			v58 = 1;
																			break;
																		end
																		if (v122 == 0) then
																			v59 = v54[1 + (893 - (210 + 683))];
																			v60 = v54[1 + 1];
																			v122 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										return v43(v42(), {}, v29)(...);
									end
								end
							end
							if (4 == v31) then
								local v47 = 0;
								while true do
									if (1 == v47) then
										function v39(v62)
											local v63 = 0;
											local v64;
											local v65;
											local v66;
											while true do
												if (v63 == 1) then
													v66 = nil;
													while true do
														local v112 = 0;
														while true do
															if (0 == v112) then
																if (v64 == 2) then
																	local v123 = 0;
																	while true do
																		if (v123 == 0) then
																			v66 = {};
																			for v150 = 1, #v65 do
																				v66[v150] = v10(v9(v11(v65, v150, v150)));
																			end
																			v123 = 1;
																		end
																		if (v123 == 1) then
																			v64 = 3 + 0;
																			break;
																		end
																	end
																end
																if (v64 == 3) then
																	return v14(v66);
																end
																v112 = 1;
															end
															if (v112 == 1) then
																if (v64 == 0) then
																	local v124 = 0;
																	while true do
																		if (v124 == 1) then
																			v64 = 4 - 3;
																			break;
																		end
																		if (0 == v124) then
																			v65 = nil;
																			if not v62 then
																				local v165 = 0;
																				local v166;
																				while true do
																					if (0 == v165) then
																						v166 = 0;
																						while true do
																							if (v166 == (0 + 0)) then
																								v62 = v37();
																								if (v62 == (0 + 0)) then
																									return "";
																								end
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			v124 = 1;
																		end
																	end
																end
																if (v64 == (1 + 0)) then
																	local v125 = 0;
																	while true do
																		if (v125 == 1) then
																			v64 = 2;
																			break;
																		end
																		if (v125 == 0) then
																			v65 = v11(v28, v32, (v32 + v62) - (1400 - ((1306 - (817 + 115)) + 1025)));
																			v32 = v32 + v62;
																			v125 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (v63 == 0) then
													v64 = 0;
													v65 = nil;
													v63 = 1;
												end
											end
										end
										v31 = 5;
										break;
									end
									if (v47 == 0) then
										function v38()
											local v67 = 0;
											local v68;
											local v69;
											local v70;
											local v71;
											local v72;
											local v73;
											local v74;
											while true do
												if (v67 == 2) then
													v72 = nil;
													v73 = nil;
													v67 = 3;
												end
												if (v67 == 0) then
													v68 = 0;
													v69 = nil;
													v67 = 1;
												end
												if (v67 == 1) then
													v70 = nil;
													v71 = nil;
													v67 = 2;
												end
												if (v67 == 3) then
													v74 = nil;
													while true do
														local v113 = 0;
														while true do
															if (v113 == 1) then
																if (v68 == (1 + 1)) then
																	local v126 = 0;
																	while true do
																		if (v126 == 0) then
																			v73 = v34(v70, (1598 - (117 + 820)) - (478 + 90 + 72), 98 - (24 + (1895 - (38 + 1814))));
																			v74 = ((v34(v70, 98 - (149 - 83)) == (2 - 1)) and -1) or (1 + 0 + 0);
																			v126 = 1;
																		end
																		if (v126 == 1) then
																			v68 = 3;
																			break;
																		end
																	end
																end
																if (v68 == 3) then
																	local v127 = 0;
																	while true do
																		if (0 == v127) then
																			if (v73 == ((2562 - (709 + 364)) - ((1777 - (1195 + 274)) + (931 - (238 + 80)) + 568))) then
																				if (v72 == 0) then
																					return v74 * ((0 + 0) - (0 - (0 - 0)));
																				else
																					local v168 = 0;
																					local v169;
																					while true do
																						if (v168 == 0) then
																							v169 = 0;
																							while true do
																								if (v169 == 0) then
																									v73 = ((880 + 690) - ((1027 - (111 + 94)) + 744)) - ((1829 - (62 + 584)) - (428 + 752));
																									v71 = 0 + 0 + 0;
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																			elseif (v73 == (1787 + 260)) then
																				return ((v72 == ((1952 - (1777 + 175)) + 0 + 0)) and (v74 * ((1 + 0 + (635 - (153 + 482))) / ((0 - 0) + 0 + 0)))) or (v74 * NaN);
																			end
																			return v16(v74, v73 - ((1190 + 1482) - (433 + 484 + 156 + (752 - (126 + 50))))) * (v71 + (v72 / ((1 + 1) ^ ((1089 - (796 + 176)) - (231 - (56 + 110))))));
																		end
																	end
																end
																break;
															end
															if (v113 == 0) then
																if (v68 == 1) then
																	local v128 = 0;
																	while true do
																		if (v128 == 1) then
																			v68 = 2;
																			break;
																		end
																		if (v128 == 0) then
																			v71 = 1;
																			v72 = (v34(v70, (1 + 0) - 0, 20) * (((462 - 265) - (125 + 70)) ^ ((11 - 7) + (1789 - (860 + 903)) + (5 - 3)))) + v69;
																			v128 = 1;
																		end
																	end
																end
																if (v68 == 0) then
																	local v129 = 0;
																	while true do
																		if (v129 == 1) then
																			v68 = 628 - (98 + 529);
																			break;
																		end
																		if (v129 == 0) then
																			v69 = v37();
																			v70 = v37();
																			v129 = 1;
																		end
																	end
																end
																v113 = 1;
															end
														end
													end
													break;
												end
											end
										end
										v39 = nil;
										v47 = 1;
									end
								end
							end
							v45 = 1;
						end
						if (v45 == 2) then
							if (2 == v31) then
								local v48 = 0;
								while true do
									if (v48 == 0) then
										function v35()
											local v75 = 0;
											local v76;
											local v77;
											while true do
												if (v75 == 1) then
													while true do
														local v114 = 0;
														while true do
															if (v114 == 0) then
																if (v76 == (1 + 0)) then
																	return v77;
																end
																if (v76 == (0 + 0)) then
																	local v130 = 0;
																	while true do
																		if (v130 == 0) then
																			v77 = v9(v28, v32, v32);
																			v32 = v32 + (1075 - (454 + 620));
																			v130 = 1;
																		end
																		if (v130 == 1) then
																			v76 = 1;
																			break;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (v75 == 0) then
													v76 = 1013 - (590 + 423);
													v77 = nil;
													v75 = 1;
												end
											end
										end
										v36 = nil;
										v48 = 1;
									end
									if (1 == v48) then
										function v36()
											local v78 = 0;
											local v79;
											local v80;
											local v81;
											while true do
												if (v78 == 1) then
													v81 = nil;
													while true do
														local v115 = 0;
														while true do
															if (v115 == 0) then
																if (v79 == 1) then
																	return (v81 * (46 + 210)) + v80;
																end
																if ((0 - 0) == v79) then
																	local v131 = 0;
																	while true do
																		if (v131 == 0) then
																			v80, v81 = v9(v28, v32, v32 + ((3 + 2) - 3));
																			v32 = v32 + (((1152 - (56 + 1080)) - 7) - (18 - 11));
																			v131 = 1;
																		end
																		if (1 == v131) then
																			v79 = 860 - (512 + 347);
																			break;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (v78 == 0) then
													v79 = 839 - (309 + 530);
													v80 = nil;
													v78 = 1;
												end
											end
										end
										v31 = 3;
										break;
									end
								end
							end
							if (1 == v31) then
								local v49 = 0;
								while true do
									if (v49 == 1) then
										v35 = nil;
										v31 = 2;
										break;
									end
									if (v49 == 0) then
										v34 = nil;
										function v34(v82, v83, v84)
											if v84 then
												local v100 = 0;
												local v101;
												local v102;
												while true do
													if (1 == v100) then
														while true do
															if ((0 - 0) == v101) then
																local v118 = 0;
																while true do
																	if (v118 == 0) then
																		v102 = (v82 / (2 ^ (v83 - (1 - 0)))) % (2 ^ (((v84 - 1) - (v83 - ((2 + 1) - 2))) + 1 + 0));
																		return v102 - (v102 % ((4 - 3) + 0));
																	end
																end
															end
														end
														break;
													end
													if (v100 == 0) then
														v101 = 917 - (232 + 685);
														v102 = nil;
														v100 = 1;
													end
												end
											else
												local v103 = 0;
												local v104;
												local v105;
												while true do
													if (1 == v103) then
														while true do
															if (v104 == (0 + 0)) then
																local v119 = 0;
																while true do
																	if (v119 == 0) then
																		v105 = (827 - (91 + 404 + 330)) ^ (v83 - (1 + 0));
																		return (((v82 % (v105 + v105)) >= v105) and ((1716 - (1518 + (1878 - (854 + 827)))) + (0 - (1359 - (955 + 404))))) or (((1013 + 769) - (231 + 84 + 1467)) + 0 + 0 + 0);
																	end
																end
															end
														end
														break;
													end
													if (v103 == 0) then
														v104 = 0;
														v105 = nil;
														v103 = 1;
													end
												end
											end
										end
										v49 = 1;
									end
								end
							end
							v45 = 3;
						end
						if (v45 == 1) then
							if (5 == v31) then
								local v50 = 0;
								while true do
									if (v50 == 1) then
										function v41(...)
											return {...}, v20("#", ...);
										end
										v31 = 6;
										break;
									end
									if (v50 == 0) then
										v40 = v37;
										v41 = nil;
										v50 = 1;
									end
								end
							end
							if (v31 == 0) then
								local v51 = 0;
								while true do
									if (v51 == 1) then
										v28 = v12(v11(v28, 12 - 7), v7("\201\205", "\231\227\135\108"), function(v85)
											if (v9(v85, 3 - 1) == (1108 - ((1171 - (570 + 568)) + 996))) then
												local v106 = 0;
												local v107;
												while true do
													if (v106 == 0) then
														v107 = 0;
														while true do
															if (v107 == 0) then
																local v120 = 0;
																while true do
																	if (0 == v120) then
																		v33 = v8(v11(v85, (2 - 0) - (1 + 0), 2 - 1));
																		return "";
																	end
																end
															end
														end
														break;
													end
												end
											else
												local v108 = 0;
												local v109;
												local v110;
												while true do
													if (1 == v108) then
														while true do
															if (v109 == 0) then
																v110 = v10(v8(v85, 16));
																if v33 then
																	local v136 = 0;
																	local v137;
																	local v138;
																	while true do
																		if (v136 == 1) then
																			while true do
																				local v167 = 0;
																				while true do
																					if (v167 == 0) then
																						if (v137 == 0) then
																							local v173 = 0;
																							while true do
																								if (v173 == 0) then
																									v138 = v13(v110, v33);
																									v33 = nil;
																									v173 = 1;
																								end
																								if (v173 == 1) then
																									v137 = 1;
																									break;
																								end
																							end
																						end
																						if (v137 == 1) then
																							return v138;
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																		if (0 == v136) then
																			v137 = 0;
																			v138 = nil;
																			v136 = 1;
																		end
																	end
																else
																	return v110;
																end
																break;
															end
														end
														break;
													end
													if (v108 == 0) then
														v109 = 0;
														v110 = nil;
														v108 = 1;
													end
												end
											end
										end);
										v31 = 1;
										break;
									end
									if (v51 == 0) then
										v32 = (7 - 4) - (1 + 1);
										v33 = nil;
										v51 = 1;
									end
								end
							end
							v45 = 2;
						end
						if (3 == v45) then
							if (v31 == 6) then
								local v52 = 0;
								while true do
									if (v52 == 1) then
										v43 = nil;
										v31 = 7;
										break;
									end
									if (v52 == 0) then
										v42 = nil;
										function v42()
											local v86 = 0;
											local v87;
											local v88;
											local v89;
											local v90;
											local v91;
											local v92;
											local v93;
											while true do
												if (v86 == 3) then
													v93 = nil;
													while true do
														local v116 = 0;
														while true do
															if (v116 == 0) then
																if (1 == v87) then
																	local v132 = 0;
																	while true do
																		if (0 == v132) then
																			v92 = v37();
																			v93 = {};
																			v132 = 1;
																		end
																		if (v132 == 2) then
																			v87 = 2;
																			break;
																		end
																		if (v132 == 1) then
																			for v152 = 1 + 0, v92 do
																				local v153 = 0;
																				local v154;
																				local v155;
																				local v156;
																				while true do
																					if (v153 == 1) then
																						v156 = nil;
																						while true do
																							if (v154 == 1) then
																								if (v155 == 1) then
																									v156 = v35() ~= 0;
																								elseif (v155 == (574 - (235 + 337))) then
																									v156 = v38();
																								elseif (v155 == (8 - (9 - 4))) then
																									v156 = v39();
																								end
																								v93[v152] = v156;
																								break;
																							end
																							if (v154 == 0) then
																								local v175 = 0;
																								while true do
																									if (v175 == 0) then
																										v155 = v35();
																										v156 = nil;
																										v175 = 1;
																									end
																									if (v175 == 1) then
																										v154 = 1;
																										break;
																									end
																								end
																							end
																						end
																						break;
																					end
																					if (v153 == 0) then
																						v154 = 0;
																						v155 = nil;
																						v153 = 1;
																					end
																				end
																			end
																			v91[(841 - (242 + 598)) + 2 + 0] = v35();
																			v132 = 2;
																		end
																	end
																end
																if (2 == v87) then
																	local v133 = 0;
																	while true do
																		if (v133 == 1) then
																			for v157 = 1 + 0, v37() do
																				v90[v157] = v37();
																			end
																			return v91;
																		end
																		if (0 == v133) then
																			for v159 = (2 + 0) - (1 - 0), v37() do
																				local v160 = 0;
																				local v161;
																				local v162;
																				while true do
																					if (v160 == 1) then
																						while true do
																							if (v161 == 0) then
																								v162 = v35();
																								if (v34(v162, (1970 - 1102) - (506 + 361), 1503 - (403 + 1099)) == 0) then
																									local v179 = 0;
																									local v180;
																									local v181;
																									local v182;
																									local v183;
																									while true do
																										if (2 == v179) then
																											while true do
																												if (v180 == 2) then
																													local v198 = 0;
																													while true do
																														if (v198 == 0) then
																															if (v34(v182, 1, 1 + 0) == (1 + 0 + 0)) then
																																v183[(1813 - (1629 + 183)) + (3 - 2)] = v93[v183[(1507 - (61 + 789)) - (37 + 618)]];
																															end
																															if (v34(v182, 8 - 6, 2) == (1 + 0)) then
																																v183[431 - (323 + 105)] = v93[v183[1 + (1234 - (354 + 878))]];
																															end
																															v198 = 1;
																														end
																														if (1 == v198) then
																															v180 = 3;
																															break;
																														end
																													end
																												end
																												if (v180 == 3) then
																													if (v34(v182, 1 + 2, 977 - (810 + 164)) == (1 + 0)) then
																														v183[15 - 11] = v93[v183[(24 - 17) - (3 + 0)]];
																													end
																													v88[v159] = v183;
																													break;
																												end
																												if (1 == v180) then
																													local v200 = 0;
																													while true do
																														if (v200 == 1) then
																															v180 = 2;
																															break;
																														end
																														if (v200 == 0) then
																															v183 = {v36(),v36(),nil,nil};
																															if (v181 == (0 - 0)) then
																																local v212 = 0;
																																local v213;
																																while true do
																																	if (v212 == 0) then
																																		v213 = 0;
																																		while true do
																																			if (v213 == 0) then
																																				v183[3 + 0] = v36();
																																				v183[(95 - (41 + 39)) - (26 - 15)] = v36();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															elseif (v181 == (1337 - (522 + 814))) then
																																v183[(336 + 1520) - (429 + 1424)] = v37();
																															elseif (v181 == ((14 - 9) - (6 - 3))) then
																																v183[(2 - 1) + (38 - (18 + 18))] = v37() - (((786 - (459 + 325)) + 0) ^ (23 - 7));
																															elseif (v181 == ((4 - 3) + 2)) then
																																local v221 = 0;
																																local v222;
																																while true do
																																	if (v221 == 0) then
																																		v222 = 0;
																																		while true do
																																			if (v222 == 0) then
																																				v183[1026 - (616 + 407)] = v37() - (((19 - 14) - 3) ^ (12 + 4));
																																				v183[25 - (17 + 4)] = v36();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															v200 = 1;
																														end
																													end
																												end
																												if (v180 == 0) then
																													local v201 = 0;
																													while true do
																														if (v201 == 0) then
																															v181 = v34(v162, (7 + 0) - 5, 6 - 3);
																															v182 = v34(v162, 688 - (444 + 240), 5 + 1);
																															v201 = 1;
																														end
																														if (v201 == 1) then
																															v180 = 1;
																															break;
																														end
																													end
																												end
																											end
																											break;
																										end
																										if (v179 == 1) then
																											v182 = nil;
																											v183 = nil;
																											v179 = 2;
																										end
																										if (v179 == 0) then
																											v180 = 0;
																											v181 = nil;
																											v179 = 1;
																										end
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if (v160 == 0) then
																						v161 = 0;
																						v162 = nil;
																						v160 = 1;
																					end
																				end
																			end
																			for v163 = 1 - 0, v37() do
																				v89[v163 - (1420 - (258 + 1161))] = v42();
																			end
																			v133 = 1;
																		end
																	end
																end
																v116 = 1;
															end
															if (1 == v116) then
																if (v87 == 0) then
																	local v134 = 0;
																	while true do
																		if (2 == v134) then
																			v87 = 1;
																			break;
																		end
																		if (v134 == 0) then
																			v88 = {};
																			v89 = {};
																			v134 = 1;
																		end
																		if (1 == v134) then
																			v90 = {};
																			v91 = {v88,v89,nil,v90};
																			v134 = 2;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (v86 == 0) then
													v87 = 0;
													v88 = nil;
													v86 = 1;
												end
												if (1 == v86) then
													v89 = nil;
													v90 = nil;
													v86 = 2;
												end
												if (2 == v86) then
													v91 = nil;
													v92 = nil;
													v86 = 3;
												end
											end
										end
										v52 = 1;
									end
								end
							end
							if (v31 == 3) then
								local v53 = 0;
								while true do
									if (v53 == 0) then
										v37 = nil;
										function v37()
											local v94 = 0;
											local v95;
											local v96;
											local v97;
											local v98;
											local v99;
											while true do
												if (v94 == 1) then
													v97 = nil;
													v98 = nil;
													v94 = 2;
												end
												if (v94 == 0) then
													v95 = 0;
													v96 = nil;
													v94 = 1;
												end
												if (v94 == 2) then
													v99 = nil;
													while true do
														local v117 = 0;
														while true do
															if (v117 == 0) then
																if (v95 == (875 - (418 + 457))) then
																	local v135 = 0;
																	while true do
																		if (0 == v135) then
																			v96, v97, v98, v99 = v9(v28, v32, v32 + 1 + 0 + 2);
																			v32 = v32 + (1621 - (269 + 216 + 1132));
																			v135 = 1;
																		end
																		if (v135 == 1) then
																			v95 = 1 + 0;
																			break;
																		end
																	end
																end
																if (v95 == 1) then
																	return (v99 * ((54074379 - (1115 + 579)) - 37295469)) + (v98 * (180702 - (179514 - (17234 + 47114)))) + (v97 * ((1836 - (640 + 188)) - 752)) + v96;
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v53 = 1;
									end
									if (v53 == 1) then
										v38 = nil;
										v31 = 4;
										break;
									end
								end
							end
							break;
						end
					end
				end
				break;
			end
			if (v30 == 2) then
				v39 = nil;
				v40 = nil;
				v41 = nil;
				v42 = nil;
				v30 = 3;
			end
		end
	end
	vv17(), ...);
end
